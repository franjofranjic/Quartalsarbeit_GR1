@using Quartalsarbeit_GR1.Models;
@model Event

@{
    ViewBag.Title = "Add";
}

<h2>Neue Kategorie</h2>

<form id="newConfig">
    <div data-event="@Model.ID" id="event"></div>

    <div class="form-group" hidden="hidden">
        <input id="event" name="event" required type="text" value="" class="form-control" hidden="hidden" />
    </div>

    <div class="form-group">
        <label>Kategorie</label>
        <div class="tt-container">
            <input id="category" name="category" required type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Disziplin</label>
        <div class="tt-container">
            <input id="discipline" name="discipline" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="disciplines" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var eventID = $("#event").attr("data-event").valueOf();
            $.ajax({
                  url: "/api/Events/" + eventID,
                  type: 'GET',
                  success: function (res) {
                      vm.event = res;
                  }
            });

            var vm = {
                disciplines: []
            };

            var categories = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('bezeichnung'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/Categories?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#category').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'categories',
                display: 'bezeichnung',
                source: categories
            }).on("typeahead:select", function (e, category) {
                vm.category = category;
            });
            var disciplines = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('bezeichnung'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/Disciplines?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#discipline').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'disciplines',
                display: 'bezeichnung',
                source: disciplines
            }).on("typeahead:select", function (e, discipline) {
                $("#disciplines").append("<li class='list-group-item'>" + discipline.bezeichnung + "</li>");

                $("#discipline").typeahead("val", "");

                vm.disciplines.push(discipline)
            });

            var validator = $("#newConfig").validate({
                submitHandler: function () {
                    console.log(vm);
                    console.log()
                    $.ajax({
                        url: "/api/Configurations",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Rentals successfully recorded.");

                            $("#category").typeahead("val", "");
                            $("#discipline").typeahead("val", "");
                            $("#disciplines").empty();

                            vm = { disciplines: [] };

                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something unexpected happened.");
                        });

                    return false;
                }

            });
        });
    </script>
}
