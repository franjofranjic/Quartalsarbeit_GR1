@using Quartalsarbeit_GR1.Models;
@model Event

@{
    ViewBag.Title = "Konfiguration";
}

<!-- TODO Side Tool mit Tab von Kategorien und Disziplinen -->

<h1>Konfiguration</h1>


<p>
    <!-- Todo Event mitgeben -->
    @Html.ActionLink("Kategorie hinzufügen", "addCategory", new { id = Model.ID })
</p>

<div data-event-id="@Model.ID" id="event"></div>

<div id="accordion">
    <h3>Kategorie</h3>
    <div>
        <div class="form-group">
            <label>Disziplin</label>
            <div class="tt-container">
                <input name="discipline" type="text" value="" class="form-control discipline" />
            </div>
        </div>

        <table id="disciplines" class="table table-bordered table-hover" style="width:100%;">
            <thead>
                <tr>
                    <th>Disziplin</th>
                    <th>Abkürzung</th>
                    <th>Formel</th>
                    <th>Löschen</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <button>Speichern</button>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            var configs;
            var eventID = $("#event").attr("data-event-id").valueOf();
            $.ajax({
                url: "/api/Configurations/" + eventID,
                type: 'GET',
                success: function (res) {
                    initTables(res);
                }
            });

            function initTables(res) {
                var container = $("#accordion");

                var disciplines = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('bezeichnung'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: '/api/Disciplines?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });



                res.forEach(element => {
                    console.log(element);
                    container.append("<h3>" + element.category.bezeichnung + "</h3><div><div class='form-group'><label>Disziplin</label><div class='tt-container'><input name='discipline' type='text' value='' class='form-control discipline' /></div></div>" +
                        "<table id='disciplines' class='table table-bordered table-hover' style='width:100%;'>"+
                            "<thead><tr><th>Disziplin</th><th>Abkürzung</th><th>Formel</th><th>Löschen</th></tr></thead>"+
                        "<tbody></tbody></table><button>Speichern</button></div>");

                }); 

                container.accordion(
                    {
                        collapsible: true,
                        event: "click",
                        active: 1
                    });


                $('.discipline').typeahead({
                    minLength: 1,
                    highlight: true
                }, {
                    name: 'disciplines',
                    display: 'bezeichnung',
                    source: disciplines
                }).on("typeahead:select", function (e, discipline) {

                    $("#discipline").typeahead("val", "");

                    res[0].disciplines.push(discipline)
                    table.row.add(discipline).draw();
                });


                res.forEach(element => {
                    // init die Sachen
                    $('.accordion-body').append('<div id="div' + element.id + '">' + element.category.bezeichnung + '</div>');
                });

                var table = $("#disciplines").DataTable({
                    data: res[0].disciplines,
                    columns: [
                        {
                            data: "bezeichnung",
                            render: function (data, type, discipline) {
                                return "<a href='/disciplines/edit/" + discipline.id + "'>" + discipline.bezeichnung + "</a>";
                            }
                        },
                        {
                            data: "abkuerzung",
                        },
                        {
                            data: "formel",
                        },
                        {
                            data: "id",
                            render: function (data) {
                                return "<button class='btn-link js-delete' data-discipline-id=" + data + ">Delete</button>";
                            }
                        }
                    ]
                });

                $("#disciplines").on("click", ".js-delete", function () {
                    var button = $(this);

                    bootbox.confirm("Are you sure you want to delete this Discipline from the Config?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/Configurations/deleteConfig",
                                data: button.attr("data-event-id"),
                                method: "DELETE",
                                success: function () {
                                    table.row(button.parents("tr")).remove().draw();
                                }
                            });
                        }
                    });
                });
            }

        });
    </script>
}
